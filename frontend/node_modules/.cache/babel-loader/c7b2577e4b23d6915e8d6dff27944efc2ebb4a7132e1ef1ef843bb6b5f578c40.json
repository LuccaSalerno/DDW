{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  currentUser: null,\n  accounts: [{\n    name: \"Lucca\",\n    lastName: \"Salerno\",\n    username: \"lsalerno\",\n    password: \"1234\",\n    isAdmin: true,\n    cart: {},\n    discount: 0\n  }]\n};\nconst accountsSlice = createSlice({\n  name: 'accounts',\n  initialState,\n  reducers: {\n    login: (state, action) => {\n      const {\n        username,\n        password\n      } = action.payload;\n      const user = state.accounts.find(account => account.username === username && account.password === password);\n      if (user) {\n        state.currentUser = user;\n        state.loginStatus = 'success';\n      } else {\n        state.loginStatus = 'failed';\n      }\n    },\n    logout: state => {\n      state.currentUser = null;\n    },\n    register: (state, action) => {\n      state.accounts.push(action.payload);\n      state.registrationStatus = 'success';\n    },\n    addItemToCart: (state, action) => {\n      const itemId = action.payload;\n      if (state.currentUser.cart[itemId]) {\n        state.currentUser.cart[itemId] += 1;\n      } else {\n        state.currentUser.cart[itemId] = 1;\n      }\n    },\n    removeItemFromCart: (state, action) => {\n      const itemId = action.payload;\n      delete state.currentUser.cart[itemId];\n    },\n    lessCartItemQuantity: (state, action) => {\n      const itemId = action.payload;\n      if (state.currentUser.cart[itemId] && state.currentUser.cart[itemId] > 1) {\n        state.currentUser.cart[itemId] -= 1;\n      }\n    },\n    updateDiscount: (state, action) => {\n      state.currentUser.discount = action.payload;\n    },\n    emptyCart: state => {\n      state.currentUser.cart = {};\n    },\n    resetLoginStatus: state => {\n      state.loginStatus = null;\n    }\n  }\n});\nexport const {\n  addAccount,\n  login,\n  logout,\n  register,\n  addItemToCart,\n  removeItemFromCart,\n  lessCartItemQuantity,\n  updateDiscount,\n  emptyCart,\n  resetLoginStatus\n} = accountsSlice.actions;\nexport default accountsSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","currentUser","accounts","name","lastName","username","password","isAdmin","cart","discount","accountsSlice","reducers","login","state","action","payload","user","find","account","loginStatus","logout","register","push","registrationStatus","addItemToCart","itemId","removeItemFromCart","lessCartItemQuantity","updateDiscount","emptyCart","resetLoginStatus","addAccount","actions","reducer"],"sources":["/workspaces/DDW/frontend/src/redux/accountsSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  currentUser: null,\n  accounts: [{name: \"Lucca\", lastName: \"Salerno\", username: \"lsalerno\", password: \"1234\", isAdmin: true, cart: {}, discount: 0 }]\n};\n\nconst accountsSlice = createSlice({\n  name: 'accounts',\n  initialState,\n  reducers: {\n    login: (state, action) => {\n      const { username, password } = action.payload;\n      const user = state.accounts.find(account => account.username === username && account.password === password);\n      if (user) {\n        state.currentUser = user;\n        state.loginStatus = 'success';\n      } else {\n        state.loginStatus = 'failed';\n      }\n    },\n    logout: (state) => {\n      state.currentUser = null;\n    },\n    register: (state, action) => {\n      state.accounts.push(action.payload);\n      state.registrationStatus = 'success';\n    },\n    addItemToCart: (state, action) => {\n      const itemId = action.payload;\n      if (state.currentUser.cart[itemId]) {\n        state.currentUser.cart[itemId] += 1;\n      } else {\n        state.currentUser.cart[itemId] = 1;\n      }\n    },\n    removeItemFromCart: (state, action) => {\n      const itemId = action.payload;\n      delete state.currentUser.cart[itemId];\n    },\n    lessCartItemQuantity: (state, action) => {\n      const itemId = action.payload;\n      if (state.currentUser.cart[itemId] && state.currentUser.cart[itemId] > 1) {\n        state.currentUser.cart[itemId] -= 1;\n      }\n    },\n    updateDiscount: (state, action) => {\n      state.currentUser.discount = action.payload;\n    },\n    emptyCart: (state) => {\n      state.currentUser.cart = {};\n    },\n    resetLoginStatus: (state) => {\n      state.loginStatus = null;\n    },\n  },\n});\n\nexport const { addAccount, login, logout, register, addItemToCart, removeItemFromCart, lessCartItemQuantity, updateDiscount, emptyCart, resetLoginStatus } = accountsSlice.actions;\n\nexport default accountsSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,WAAW,EAAE,IAAI;EACjBC,QAAQ,EAAE,CAAC;IAACC,IAAI,EAAE,OAAO;IAAEC,QAAQ,EAAE,SAAS;IAAEC,QAAQ,EAAE,UAAU;IAAEC,QAAQ,EAAE,MAAM;IAAEC,OAAO,EAAE,IAAI;IAAEC,IAAI,EAAE,CAAC,CAAC;IAAEC,QAAQ,EAAE;EAAE,CAAC;AAChI,CAAC;AAED,MAAMC,aAAa,GAAGX,WAAW,CAAC;EAChCI,IAAI,EAAE,UAAU;EAChBH,YAAY;EACZW,QAAQ,EAAE;IACRC,KAAK,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACxB,MAAM;QAAET,QAAQ;QAAEC;MAAS,CAAC,GAAGQ,MAAM,CAACC,OAAO;MAC7C,MAAMC,IAAI,GAAGH,KAAK,CAACX,QAAQ,CAACe,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACb,QAAQ,KAAKA,QAAQ,IAAIa,OAAO,CAACZ,QAAQ,KAAKA,QAAQ,CAAC;MAC3G,IAAIU,IAAI,EAAE;QACRH,KAAK,CAACZ,WAAW,GAAGe,IAAI;QACxBH,KAAK,CAACM,WAAW,GAAG,SAAS;MAC/B,CAAC,MAAM;QACLN,KAAK,CAACM,WAAW,GAAG,QAAQ;MAC9B;IACF,CAAC;IACDC,MAAM,EAAGP,KAAK,IAAK;MACjBA,KAAK,CAACZ,WAAW,GAAG,IAAI;IAC1B,CAAC;IACDoB,QAAQ,EAAEA,CAACR,KAAK,EAAEC,MAAM,KAAK;MAC3BD,KAAK,CAACX,QAAQ,CAACoB,IAAI,CAACR,MAAM,CAACC,OAAO,CAAC;MACnCF,KAAK,CAACU,kBAAkB,GAAG,SAAS;IACtC,CAAC;IACDC,aAAa,EAAEA,CAACX,KAAK,EAAEC,MAAM,KAAK;MAChC,MAAMW,MAAM,GAAGX,MAAM,CAACC,OAAO;MAC7B,IAAIF,KAAK,CAACZ,WAAW,CAACO,IAAI,CAACiB,MAAM,CAAC,EAAE;QAClCZ,KAAK,CAACZ,WAAW,CAACO,IAAI,CAACiB,MAAM,CAAC,IAAI,CAAC;MACrC,CAAC,MAAM;QACLZ,KAAK,CAACZ,WAAW,CAACO,IAAI,CAACiB,MAAM,CAAC,GAAG,CAAC;MACpC;IACF,CAAC;IACDC,kBAAkB,EAAEA,CAACb,KAAK,EAAEC,MAAM,KAAK;MACrC,MAAMW,MAAM,GAAGX,MAAM,CAACC,OAAO;MAC7B,OAAOF,KAAK,CAACZ,WAAW,CAACO,IAAI,CAACiB,MAAM,CAAC;IACvC,CAAC;IACDE,oBAAoB,EAAEA,CAACd,KAAK,EAAEC,MAAM,KAAK;MACvC,MAAMW,MAAM,GAAGX,MAAM,CAACC,OAAO;MAC7B,IAAIF,KAAK,CAACZ,WAAW,CAACO,IAAI,CAACiB,MAAM,CAAC,IAAIZ,KAAK,CAACZ,WAAW,CAACO,IAAI,CAACiB,MAAM,CAAC,GAAG,CAAC,EAAE;QACxEZ,KAAK,CAACZ,WAAW,CAACO,IAAI,CAACiB,MAAM,CAAC,IAAI,CAAC;MACrC;IACF,CAAC;IACDG,cAAc,EAAEA,CAACf,KAAK,EAAEC,MAAM,KAAK;MACjCD,KAAK,CAACZ,WAAW,CAACQ,QAAQ,GAAGK,MAAM,CAACC,OAAO;IAC7C,CAAC;IACDc,SAAS,EAAGhB,KAAK,IAAK;MACpBA,KAAK,CAACZ,WAAW,CAACO,IAAI,GAAG,CAAC,CAAC;IAC7B,CAAC;IACDsB,gBAAgB,EAAGjB,KAAK,IAAK;MAC3BA,KAAK,CAACM,WAAW,GAAG,IAAI;IAC1B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEY,UAAU;EAAEnB,KAAK;EAAEQ,MAAM;EAAEC,QAAQ;EAAEG,aAAa;EAAEE,kBAAkB;EAAEC,oBAAoB;EAAEC,cAAc;EAAEC,SAAS;EAAEC;AAAiB,CAAC,GAAGpB,aAAa,CAACsB,OAAO;AAElL,eAAetB,aAAa,CAACuB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}